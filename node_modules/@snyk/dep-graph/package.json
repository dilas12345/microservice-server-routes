{
  "_args": [
    [
      {
        "raw": "@snyk/dep-graph@1.8.1",
        "scope": "@snyk",
        "escapedName": "@snyk%2fdep-graph",
        "name": "@snyk/dep-graph",
        "rawSpec": "1.8.1",
        "spec": "1.8.1",
        "type": "version"
      },
      "/home/yusuphdilas/dev/online-tuition/microservice-server-routes/node_modules/snyk"
    ]
  ],
  "_from": "@snyk/dep-graph@1.8.1",
  "_hasShrinkwrap": false,
  "_id": "@snyk/dep-graph@1.8.1",
  "_location": "/@snyk/dep-graph",
  "_nodeVersion": "10.16.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/dep-graph_1.8.1_1561463818650_0.8064835256759346"
  },
  "_npmUser": {
    "name": "snyk-admin",
    "email": "npmjs+snyk-admin@snyk.io"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@snyk/dep-graph@1.8.1",
    "scope": "@snyk",
    "escapedName": "@snyk%2fdep-graph",
    "name": "@snyk/dep-graph",
    "rawSpec": "1.8.1",
    "spec": "1.8.1",
    "type": "version"
  },
  "_requiredBy": [
    "/snyk"
  ],
  "_resolved": "https://registry.npmjs.org/@snyk/dep-graph/-/dep-graph-1.8.1.tgz",
  "_shasum": "4286dc42f691e826c4779a77722e7ac7fa692420",
  "_shrinkwrap": null,
  "_spec": "@snyk/dep-graph@1.8.1",
  "_where": "/home/yusuphdilas/dev/online-tuition/microservice-server-routes/node_modules/snyk",
  "author": {
    "name": "snyk.io"
  },
  "bugs": {
    "url": "https://github.com/snyk/dep-graph/issues"
  },
  "dependencies": {
    "graphlib": "^2.1.5",
    "lodash": "^4",
    "object-hash": "^1.3.1",
    "semver": "^6.0.0",
    "source-map-support": "^0.5.11",
    "tslib": "^1.9.3"
  },
  "description": "Snyk dependency graph library",
  "devDependencies": {
    "@types/graphlib": "^2.1.4",
    "@types/jest": "^24",
    "@types/lodash": "^4",
    "@types/node": "^8",
    "@types/object-hash": "^1.2.0",
    "@types/semver": "^5",
    "jest": "^24",
    "ts-jest": "^24",
    "ts-node": "^8",
    "tslint": "^5",
    "typescript": "^3.3.3333"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-cWqJwuiU1+9hL0Fd/qgq0DYeWM/6mqPIa/B0yoEsHD8nR/IPFgalVvMbOSdPKeApvi/AxDzcRxr8tfqHJ7aq2w==",
    "shasum": "4286dc42f691e826c4779a77722e7ac7fa692420",
    "tarball": "https://registry.npmjs.org/@snyk/dep-graph/-/dep-graph-1.8.1.tgz",
    "fileCount": 36,
    "unpackedSize": 69912,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEgwLCRA9TVsSAnZWagAAeGAP/iP/tFLdlY7OtmBGqjYg\nY+0ywu/OSare5FnfWYKxPQ+OgwHvL/J3echLLQiTkOXKoqV0bgYtf3gYIg5D\nK4SICl1BgaVestsTx0NdZ9ns4eY6m+fAoctyvOPKdZOT6C1tLwDxsxsfvd1c\nhWbz4TgW7E6sExBb5UEajoKA6hMbGLZJ12CaQj594sDhifOGIWRvtoBq4xwK\n1hv/mYIeid8o6Qn88vFTbaRZXwpsjoGoMP/rlr00UwLos1nrLvzpjm3vkGm7\n9RmhKvq8X8gIIrg68zJ06/reSEPPysgUM3AdF0qlxXQtYxUrl/gVn+FmjIzf\nHhUPIxSxVRHRemmOqP7nu8kMSCxtoBle88mzzoMWfro+LQkYX7DJbclIV+0V\nWmSz083RshQUAcYRXN6aVhY3O+KXsg5662xuA1HZY2qAhVihmDH8W1t/7CbJ\nAQKJG3TCvqusYGAen855GgARhFwt0gcAPyhwrfEZaZYbHIEgCQz9H4U2Wutc\nlHO4V/hfaVkG3NalSvzLTw7Fgl6FN521tiNfF6Mb2uXFFFTRQMEoKNbkXepk\n4tt6sA8L5xFHdmnUcd/UWk8KM0JXqF1/Yz4OGnVYGf0DNqCSxf1lyBApaYZW\nTpG2Fp8iwAJ891XueFkDVBAnL+oXAMylu6qroDv2e+yRk5yEMH8mrII3PIe8\nhvRK\r\n=aHVS\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "dist"
  ],
  "gitHead": "7eb5ca6474108ee51612dcd1c1cf8205e0974dd0",
  "homepage": "https://github.com/snyk/dep-graph#readme",
  "license": "Apache-2.0",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "snyk-admin",
      "email": "npmjs+snyk-admin@snyk.io"
    }
  ],
  "name": "@snyk/dep-graph",
  "optionalDependencies": {},
  "readme": "![Snyk logo](https://snyk.io/style/asset/logo/snyk-print.svg)\n\n***\n\n[![Known Vulnerabilities](https://snyk.io/test/npm/@snyk/dep-graph/badge.svg)](https://snyk.io/test/npm/@snyk/dep-graph)\n\nSnyk helps you find, fix and monitor for known vulnerabilities in your dependencies, both on an ad hoc basis and as part of your CI (Build) system.\n\n# Snyk dep-graph\n\nThis library provides a time and space efficient representation of a resolved package dependency graph, which can be used to construct, query and de/serialize dep-graphs.\n\n## The Graph\n\nA directed graph, where a node represents a package instance and an edge from node `foo` to node `bar` means `bar` is a dependency of `foo`.\n\nA package (`name@version`) can have several different nodes (i.e. instances) in the graph. This flexibility is useful for some ecosystems, for example:\n\n* in `npm` due to conflict-resolutions by duplication. e.g. try to `npm i tap@5.7` and then run `npm ls` and look for `strip-ansi@3.0.1`. You'll see that in some instances it depends on `ansi-regex@2.0.0` while in others on `ansi-regex@2.1.1`.\n* in `maven` due to \"exclusion\" rules. A dependency `foo` can be declared in the `pom.xml` such that some of it's sub-dependencies are excluded via the `<exclusions>` tag. If the same dependency is required elsewhere without (or with different) exclusions then `foo` can appear in the tree with different sub-trees.\n\nThis can also be used to break cycles in the graph, e.g.:\n\ninstead of:\n```\nA -> B -> C -> A\n```\ncan have:\n```\nA -> B -> C -> A'\n```\n\n## API Reference\n\n### `DepGraph`\n\n#### Interface\n\nA dep-graph instance can be queried using the following interface:\n\n```typescript\nexport interface DepGraph {\n  readonly pkgManager: {\n    name: string;\n    version?: string;\n    repositories?: Array<{\n      alias: string;\n    }>;\n  };\n  readonly rootPkg: {\n    name: string;\n    version: string | null;\n  };\n  getPkgs(): Array<{\n    name: string;\n    version: string | null;\n  }>;\n  pkgPathsToRoot(pkg: Pkg): Array<Array<{\n    name: string;\n    version: string | null;\n  }>>;\n  toJSON(): DepGraphData;\n  equals(other: DepGraph, options?: { compareRoot?: boolean }): boolean;\n}\n```\n\n### `DepGraphData`\n\nA dep-graph can be serialised into the following format:\n\n```typescript\nexport interface DepGraphData {\n  schemaVersion: string;\n  pkgManager: {\n    name: string;\n    version?: string;\n    repositories?: Array<{\n      alias: string;\n    }>;\n  };\n  pkgs: Array<{\n    id: string;\n    info: {\n      name: string;\n      version: string | null;\n    };\n  }>;\n  graph: {\n    rootNodeId: string;\n    nodes: Array<{\n      nodeId: string;\n      pkgId: string;\n      info?: {\n        versionProvenance?: {\n          type: string;\n          location: string;\n          property?: {\n            name: string;\n          };\n        },\n        labels?: {\n          [key: string]: string;\n        };\n      };\n      deps: Array<{\n        nodeId: string;\n      }>;\n    }>;\n  };\n}\n```\n\n### `createFromJSON`\n\n`DepGraphData` can be used to construct a `DepGraph` instance using `createFromJSON`\n\n### The `legacy` module\n\nA `DepTree` is a legacy structure used by the Snyk CLI to represent dependency trees. Conversion functions in the `legacy` module ease the gradual migration of code that relies on the legacy format.\n\n#### Legacy `DepTree`\n\nA `DepTree` is a recursive structure that is quite similar to the output of `npm list --json`, and (omitting some details) looks like:\n\n```typescript\ninterface DepTree {\n  name: string;\n  version: string;\n  dependencies: {\n    [depName: string]: DepTree\n  };\n}\n```\n\nThe `legacy` conversion functions aim to maintain extra data that might be attached to the dep-tree and is dependant upon in code that wasn't yet updated to use solely dep-graphs:\n* `targetOS` which exists on tree roots for Docker scans\n* `versionProvenance` which might exist on the nodes of maven trees, storing information about the source manifest that caused the specfic version to be resolved\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/snyk/dep-graph.git"
  },
  "scripts": {
    "build": "tsc",
    "lint": "tslint -p tsconfig.json",
    "prepare": "npm run build",
    "test": "jest --verbose --runInBand",
    "test:coverage": "npm run test -- --coverage"
  },
  "types": "dist/index.d.ts",
  "version": "1.8.1"
}
