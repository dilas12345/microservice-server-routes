{
  "_args": [
    [
      {
        "raw": "snyk-config@^2.2.1",
        "scope": null,
        "escapedName": "snyk-config",
        "name": "snyk-config",
        "rawSpec": "^2.2.1",
        "spec": ">=2.2.1 <3.0.0",
        "type": "range"
      },
      "/home/yusuphdilas/dev/online-tuition/microservice-server-routes/node_modules/snyk"
    ]
  ],
  "_from": "snyk-config@^2.2.1",
  "_hasShrinkwrap": false,
  "_id": "snyk-config@2.2.1",
  "_location": "/snyk-config",
  "_nodeVersion": "10.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/snyk-config_2.2.1_1549355662756_0.6392630007335189"
  },
  "_npmUser": {
    "name": "snyk-admin",
    "email": "npmjs+snyk-admin@snyk.io"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "snyk-config@^2.2.1",
    "scope": null,
    "escapedName": "snyk-config",
    "name": "snyk-config",
    "rawSpec": "^2.2.1",
    "spec": ">=2.2.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/snyk"
  ],
  "_resolved": "https://registry.npmjs.org/snyk-config/-/snyk-config-2.2.1.tgz",
  "_shasum": "bdacf79193158ec659bdcc4194140fd8d3772f9d",
  "_shrinkwrap": null,
  "_spec": "snyk-config@^2.2.1",
  "_where": "/home/yusuphdilas/dev/online-tuition/microservice-server-routes/node_modules/snyk",
  "author": {
    "name": "Remy Sharp"
  },
  "bugs": {
    "url": "https://github.com/snyk/config/issues"
  },
  "dependencies": {
    "debug": "^3.1.0",
    "lodash": "^4.17.11",
    "nconf": "^0.10.0"
  },
  "description": "Config setup for snyk shared across projects",
  "devDependencies": {
    "tap-spec": "^5.0.0",
    "tape": "^4.9.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-eCsFKHHE4J2DpD/1NzAtCmkmVDK310OXRtmoW0RlLnld1ESprJ5A/QRJ5Zxx1JbA8gjuwERY5vfUFA8lEJeopA==",
    "shasum": "bdacf79193158ec659bdcc4194140fd8d3772f9d",
    "tarball": "https://registry.npmjs.org/snyk-config/-/snyk-config-2.2.1.tgz",
    "fileCount": 17,
    "unpackedSize": 11967,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWUqPCRA9TVsSAnZWagAAcGMP/Aq64MLh5QRVFLGL3ybD\nrSyvk6J0kbtSyDZEUmU687SZkHOhgJkLhOOgk08Vrm4RDH4UDW9BQyQQBTBD\nYff3cC+fZPklc3W1RD71zMVMd5wUAVJJoTmoU6MkTLo6G81NU/ABiCqGJhIf\nyjiIS7534lwQ7JXNjfhTXPFBJ5nLTUyM/Z5MO/Qaa583Nx2rOcTSWstcHkiL\nslZjVsBb1n8mGpCShIB4aAEusleSunqAtxhEqNU2/9gSkPWESBfD6NQlAx90\nZeH8SvL3kNCxPtBCv2Gup6Xtqjwi340K1o6iCSt6sZpy8G7RjtwCrnOGgLt5\nSxYwUFa9RCNzUb4fx1ZXca0wm1wxTEHFTifetghl800/WJJDWxXCOHIzpYUi\nOIH9yDvpEf2BPBtpg/UsfXFuGgKy3pSQdorODfd2teGzyQd3gln4hFIfKVn7\n3FjitjPhTVDfzjreQeJ+uyDCQnbpzdv6K7S5IH6Uny+xnFxmL5LchANK6jZz\nQo4/w82HSFx3yV3Qp2GwPDV6ZdD9U9d5tLmyNP+F6SInw149wu9D9MrYX6zT\n/FkWBcgF6L1Ioki42c3yJbtezzGLMJ2n4O0tKBI9KVxggc5//QYHgzpJz4fl\nANlvnHaUiOr6VAm59HVHNmiZYxPXOoLpDtucts6cSY8IJ4WybvlIbvqRbpDe\nw8F1\r\n=emum\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "a5aea14d52238f000f19b9633a82ca2eb9ff36e0",
  "homepage": "https://github.com/snyk/config#readme",
  "keywords": [
    "config"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "snyk-admin",
      "email": "admin+snyk@snyk.io"
    }
  ],
  "name": "snyk-config",
  "optionalDependencies": {},
  "readme": "# snyk-config\n\nLoads the configuration for your module.\n\n## Usage\n\nAlthough you can require this module directly, it's recommended you create your own `config.js` file that can be cached by the require system and called *without* a path:\n\n```js\n// config.js\nmodule.exports = require('@snyk/config')('<directory with config files>');\n\n// in app.js\nvar config = require('./config');\n\n// in foo.js\nvar config = require('./config'); // matches config in app.js\n```\n\n## Method\n\nThe config loader will look for the following values in order of priority, specifically, if a property appears in multiple layers of config (below) the first found is used:\n\n- process environment values prefixed with `SNYK_`\n- process arguments\n- a `config.secret.json` file in the path specified by the `secretConfig` option, OR in the root of your module\n- a `config.local.json` file in the root of your module\n- a `config.default.json` file in the root of your module\n\n## Example\n\n### config.local.json\n\n```json\n{\n  \"from\": \"file\"\n}\n```\n\n### app.js\n\n```js\n// as we're in the same directory as the config.local.json, there's no arg\nvar config = require('@snyk/config')();\nconsole.log(config);\n```\n\n### cli\n\n```shell\n$ SNYK_from=cli node app.js\n=> { from: \"cli\" }\n```\n\n## Notes\n\n* Values read from the environment or from the process arguments will *always* be strings. This is important to differentiate from values parsed in the config files as these can be `boolean` or `numbers`.\n* Environment property names strip *off* the preceding `SNYK_` string, so `SNYK_foo = 10` becomes `foo = \"10\"`\n* To create a nested object structure from the environment values, use two underscores: `SNYK_foo__bar = 10` becomes `foo = { bar: \"10\" }`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/snyk/config.git"
  },
  "scripts": {
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "node test/*.test.js --afoo --azoo='true' | tap-spec"
  },
  "version": "2.2.1"
}
